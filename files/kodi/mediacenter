#!/bin/bash
# Modified by C.Levasseur
#
# Original Author : Sam Nazarko  email@samnazarko.co.uk

fb_restore() {
	[ -e /var/run/fb_resolution ] && /bin/fbset $(cat /var/run/fb_resolution)
	/bin/fbset -depth 8 && /bin/fbset -depth 16
	echo 1 >/sys/class/vtconsole/vtcon1/bind
}

export TERM=linux
chown kodi:kodi /sys/class/vtconsole/vtcon*/bind

if [ "$1" = "stop" ]; then
	fb_restore
	exit
fi

trap 'wait; exit 0' TERM

chmod a+rw /dev/tty1
/usr/bin/setterm --blank 0 </dev/tty1 >/dev/tty1

/sbin/checkmodifier; CODE=$?
case $CODE in
4)
	/usr/bin/setterm --cursor on >/dev/tty1
	systemctl start getty@tty1
	exit 0
	;;
5)
	vres=$(/bin/fbset | grep geometry | awk '{print $3}')
	dialog --backtitle "Package configuration" --title "Kodibox Update" --infobox "\n     Establishing a connection to the Kodibox update servers..." 5 71 > /dev/tty1

	count=60
	while [ $count -gt 0 ]; do
		if grep -q nfsroot /proc/cmdline; then
			ping -c 1 -W 2 packages.ipocus.net >/dev/null 2>&1 && break
		else
			if [ $(grep "" /sys/class/net/*/operstate | grep -v "lo/operstate" | awk '{split($0,a,":"); print a[2]}') == "up" ]; then break; fi
		fi
		sleep 5; let count-=5
	done

	if [ $count -lt 1 ]
	then
		dialog --backtitle "Package configuration" --title "KBOX Update" --infobox "\n    No internet connection was found. Rebooting in 20 seconds." 5 71 > /dev/tty1
		sleep 20; reboot
	fi
        dialog --backtitle "Package configuration" --title "KBOX Update" --infobox "\n         Updating the list of available Kodibox packages..." 5 71 > /dev/tty1
        err=$(apt-get -qq update); if [ -n "$err" ]
        then
                dialog --backtitle "Package configuration" --title "KBOX Update" --infobox "The following errors occured while searching for new packages:\n\n${err}\n\nContinuing in 20 seconds..." 0 0 > /dev/tty1
                sleep 20
        fi
        systemctl start manual-update
        exit 0
        ;;
esac

if [ ! -e /var/run/fb_resolution ]; then
	/bin/fbset | grep geometry | awk '{print "-xres "$2" -yres "$3" -vxres "$4" -vyres "$5}' > /var/run/fb_resolution
fi

while true; do
	if [ -f /home/kodi/.factoryreset ]; then rm -rf /home/kodi/.kodi && rm /home/kodi/.factoryreset; fi
	if [ -f /tmp/guisettings.restore ]; then mv /tmp/guisettings.restore /home/kodi/.kodi/userdata/guisettings.xml; fi
	KODI=/usr/lib/kodi/kodi.bin
	setcap 'cap_net_bind_service=+ep' $KODI
	setcap 'cap_sys_reboot=+ep' $KODI
	starttime=$(date +%s)
	echo "Starting Kodi..."
	sudo -u kodi $KODI --standalone -fs --lircdev /var/run/lirc/lircd; CODE="$?"
	endtime=$(date +%s)
	seconds=$(($endtime - $starttime)); hours=$((seconds / 3600)); seconds=$((seconds % 3600)); minutes=$((seconds / 60)); seconds=$((seconds % 60))
	echo "Kodi exited with return code $CODE after $hours hours, $minutes minutes and $seconds seconds"

	fb_restore
	case $CODE in
	64 )
		shutdown -P now;;
	66 )
		shutdown -r now;;	
	esac
	chmod a+rw /dev/tty1
	systemctl status getty@tty1 >/dev/null; GETTY=$?
	if [ "$GETTY" -ne 0 ]; then
		chvt 1
		/usr/bin/setterm --cursor off >/dev/tty1
		/usr/bin/clear >/dev/tty1
		/bin/ply-image "$CODE"
		read -n 1 -s -t 10 key </dev/tty1
	fi
	if [ "$key" = $'\e' -o "$GETTY" -eq 0 ]; then
		/bin/fbset -depth 8 && /bin/fbset -depth 16
		/usr/bin/setterm --cursor on >/dev/tty1
		systemctl start getty@tty1
		count=30
		while [ $count -gt 0 ]; do
			who | awk '{print $2}' | grep -q tty1
			if [ "$?" -eq 0 ]; then
				count=5
			else
				let count=count-5
			fi
			sleep 5
		done
		systemctl stop getty@tty1
	fi
done
